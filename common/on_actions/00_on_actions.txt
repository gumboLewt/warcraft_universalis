# country
on_startup = {
    events = {
        discovery.1  # Discovery
        setup.1 # Global
        setup.2 # Country specific
    }
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_startup" }
}

# country
on_religion_change = {
    if = {
        limit = {
            has_country_modifier = alliance_member
            is_evil = yes
        }
        opinions_left_alliance = yes
    }
    if = {
        limit = {
            has_country_modifier = horde_member
            is_evil = yes
        }
        opinions_left_horde = yes
    }

    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_religion_change" }
}

# country. Spawned when Enforcing Rebel Demands through a Support Rebels-war.
on_enforce_rebel_demands = {
    set_country_flag = helped_rebels_win_war
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_enforce_rebel_demands" }
}

# country
on_colonial_liberation = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_colonial_liberation" }
}

# country
on_colonial_reintegration = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_colonial_reintegration" }
}

# country
on_peace_actor = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_peace_actor" }
}

# country
on_peace_recipient = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_peace_recipient" }
}

# country
# root = winning country, from = loser country
on_war_won = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - winner : [Root.GetName] - loser : [From.GetName] - on_war_won" }
}

# country
# root = loser country, from = winner country
on_war_lost = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - winner : [From.GetName] - loser : [Root.GetName] - on_war_lost" }
}

# country
# root = winning country, from = loser country
on_battle_won_country = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - winner : [Root.GetName] - loser : [From.GetName] - on_battle_won_country" }
    
    random_events = {
        1000 = 0
        100 = wow_heroes.1 # A Hero Emerges!
        100 = wow_heroes.2 # Heroics Prevail!
    }
}

# country
# root = loser country, from = winner country
on_battle_lost_country = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - winner : [From.GetName] - loser : [Root.GetName] - on_battle_lost_country" }
    events = {
        rise_of_the_horde.6
    }
}

# province
# root = location, from = loser country
on_battle_won_province = {
   if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - loser : [From.GetName] - on_battle_won_province" }
}

# province
# root = location, from = winner country
on_battle_lost_province = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - winner : [From.GetName] - on_battle_lost_province" }
}

# province
# root = location, from = country doing it
on_added_to_trade_company ={
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - country : [From.GetName] - on_added_to_trade_company" }
}

# province
# root = location, from = country doing it
on_removed_from_company ={
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - country : [From.GetName] - on_removed_from_company" }
}

# province
# root = location, from = country doing it
on_company_formed ={
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - country : [From.GetName] - on_company_formed" }
}

# province
# root = location, from = country doing it
on_company_disolved ={
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - country : [From.GetName] - on_company_disolved" }
}


# country
# root = winning country, from = location
on_siege_won_country = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [From.GetName] - winner : [Root.GetName] - on_siege_won_country" }
}

# country
# root = losing country, from = location
on_siege_lost_country = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [From.GetName] - loser : [Root.GetName] - on_siege_lost_country" }
}

# province
# root = location, from = losing country
on_siege_won_province = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - loser : [From.GetName] - on_siege_won_province" }
}

# province
# root = location, from = winning country
on_siege_lost_province =  {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - winner : [From.GetName] - on_siege_lost_province" }
}

# province
# root = location, from = country that abandons colony
# Fired right before the colony is abandoned.
on_abandon_colony = {   
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - country : [From.GetName] - on_abandon_colony" }
}

# country
on_new_monarch = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_new_monarch" }

    events = {
        wow_government.1    # The Education of [Root.Monarch.GetName]
        wow_government.2    # Ascension of [Root.Monarch.GetName]
    }
    if = {
        limit = { has_country_modifier = alliance_head }
        country_event = { id = factions.5 }
    }
    if = {
        limit = { has_country_modifier = horde_head }
        country_event = { id = factions.6 }
    }
}

on_new_consort = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_new_consort" }
}

on_monarch_death = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_monarch_death" }
    events = {
    }
}

# country 
on_regent = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_regent" }
}

# country 
on_new_term_election = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_new_term_election" }
    events = {
        elections.1
    }
}

# country 
on_death_election = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_death_election" }
    events = {
        elections.2
    }
}

# country 
on_replace_governor = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_replace_governor" }
	events = {
		
	}
}

# country
on_bankruptcy = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_bankruptcy" }
}

# country (country annexing, root = target)
on_diplomatic_annex = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_diplomatic_annex" }
    events = {
        generic_onaction.1
    }
}

#country
on_heir_death = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - country" }
    if = {
        limit = { has_country_flag = heir_dip_education }
        clr_ruler_flag = heir_dip_education
    }
    if = {
        limit = { has_country_flag = heir_mil_education }
        clr_ruler_flag = heir_mil_education
    }
    if = {
        limit = { has_country_flag = heir_adm_education }
        clr_ruler_flag = heir_adm_education
    }
    if = {
        limit = { has_ruler_flag = well_advised_tutored_heir }
        clr_ruler_flag = well_advised_tutored_heir
    }
    if = {
        limit = { has_ruler_flag = heir_went_on_grand_tour }
        clr_ruler_flag = heir_went_on_grand_tour
    }
}

# country
on_queen_death = {  
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_queen_death" }
}

# When a non-native changes government type
on_government_change = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_government_change" }
}

# country
on_new_heir = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_new_heir" }
}

# country 
on_weak_heir_claim = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_weak_heir_claim" }
    events = {
        generic_onaction.2
    }
}

on_heir_needed_theocracy = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_heir_needed_theocracy" }
	events = {
		
	}
}

# Emperor from same dynasty
on_successive_emperor = {
    
    events = {
        
    }
}

# HRE Prince released by the emperor
on_released_hre_member = {
    events = {
        
    }
}

# HRE Prince converts to non-Emperor religion
on_hre_member_false_religion = {

}

# HRE Prince converts to Emperor religion
on_hre_member_true_religion = {

}

# Emperor wins HRE defensive war
on_hre_wins_defensive_war = {

}

# HRE member annexed by non-HRE country
on_hre_member_annexed = {
    events = {
        
    }
}

# HRE member released from non-HRE vassalage
on_hre_released_vassal = {
    events = {
        
    }
}

# Emperor coming to the defense of a HRE member
on_hre_defense = {
    events = {
        
    }
}

# Emperor NOT coming to the defense of a HRE member
on_hre_non_defense = {
    events = {
        
    }
}

# HRE Member takes a HRE province from an outs100e country in a peace (province scope)
on_hre_province_reconquest = {
    events = {
        
    }
}

# When a native changes government after filling all their advancement groups.
on_native_change_government = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_native_change_government" }
}

# Nation is integrated after being in union
on_integrate = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_integrate" }
    events = {
        generic_onaction.1
    }
}

# Nation annexed
on_annexed = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_annexed" }
}

# When a nation gains the Mandate of Heaven (becomes the Emperor of China)
# FROM = Old Emperor, ROOT = New Emperor
on_mandate_of_heaven_gained = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - old emperor: [From.GetName] - new emperor: [Root.GetName] - on_mandate_of_heaven_gained" }
}

# When a nation loses the Mandate of Heaven
# FROM = New Emperor, ROOT = Old Emperor
on_mandate_of_heaven_lost = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - old emperor: [Root.GetName] - new emperor: [From.GetName] - on_mandate_of_heaven_lost" }
}

on_dismantle_revolution = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_dismantle_revolution" }
    kill_ruler = yes
    set_revolution_target = xxx
    if = {
        limit = { has_heir = yes }
        kill_heir = yes
    }
}

# province
on_adm_development = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_adm_development" }
}

# province
on_dip_development = {  
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_dip_development" }
}

# province
on_mil_development = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_mil_development" }
}

on_lock_hre_religion = {
    
}

on_change_hre_religion = {
}

on_hre_religion_white_peace = {

}

on_overextension_pulse = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_overextension_pulse" }
    random_events = {
        100 = wow_overextension.1
        100 = wow_overextension.2
        100 = wow_overextension.3
        100 = wow_overextension.4
        100 = wow_overextension.5
        100 = wow_overextension.6
        100 = wow_overextension.7
        100 = wow_overextension.8
        100 = wow_overextension.9
        100 = wow_overextension.10
    }
}

on_siberian_pulse = {
}

on_colonial_pulse = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_colonial_pulse" }
}

# country random events
on_bi_yearly_pulse = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_bi_yearly_pulse" }

    random_events = {
        100 = wow_outland.1
        100 = wow_outland.2
        100 = wow_outland.3

        #Personality Events
        #25 = personality_events.10 #Just Dilema
        #25 = personality_events.11 #A righteous King
        #25 = personality_events.12 #A Righteous Republican Ruler
        #25 = personality_events.13
        #25 = personality_events.14
        #25 = personality_events.15
        #25 = personality_events.16
        #25 = personality_events.17
        #25 = personality_events.18
        #25 = personality_events.19
        #25 = personality_events.20
        #25 = personality_events.21
        #25 = personality_events.22
        #25 = personality_events.23
        #25 = personality_events.24
        #25 = personality_events.25
        #25 = personality_events.26
        #25 = personality_events.27
        #25 = personality_events.28
        #25 = personality_events.29
        #25 = personality_events.30
        #25 = personality_events.31
        #25 = personality_events.32
        #25 = personality_events.33
        #25 = personality_events.34
        #25 = personality_events.35
        #25 = personality_events.36
        #25 = personality_events.37
        #25 = personality_events.38
        #25 = personality_events.39
        #25 = personality_events.40
        #25 = personality_events.41
        #25 = personality_events.42
        #25 = personality_events.43
        #25 = personality_events.44
        #25 = personality_events.45
        #25 = personality_events.46
        #25 = personality_events.47
        #25 = personality_events.48
        #25 = personality_events.49
        #25 = personality_events.50
        #25 = personality_events.51
        #25 = personality_events.52
        #25 = personality_events.53
        #25 = personality_events.54
        #25 = personality_events.55
        #25 = personality_events.56
        #25 = personality_events.57
        #25 = personality_events.58

        1000 = 0
    }
}

on_bi_yearly_pulse_2 = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_bi_yearly_pulse_2" }

    random_events = {
        100 = corruption_event.1
        100 = corruption_event.2
        100 = corruption_event.3
        100 = corruption_event.4
        100 = corruption_event.5
        100 = corruption_event.6
        100 = corruption_event.7
        100 = corruption_event.8
        #100 = corruption_event.9
        100 = corruption_event.10
        #100 = corruption_event.11
        100 = corruption_event.12
        100 = corruption_event.13
        100 = corruption_event.14
        100 = corruption_event.15
        100 = corruption_event.16
        100 = corruption_event.17
        100 = corruption_event.18
        100 = corruption_event.19
        100 = corruption_event.20
        
        4000 = 0
    }
}

on_bi_yearly_pulse_3 = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_bi_yearly_pulse_3" }

}

on_bi_yearly_pulse_4 = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_bi_yearly_pulse_4" }

}

# country random events
on_thri_yearly_pulse = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_thri_yearly_pulse" }
}

on_thri_yearly_pulse_2 = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_thri_yearly_pulse_2" }
}

on_thri_yearly_pulse_3 = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_thri_yearly_pulse_3" }
}

on_thri_yearly_pulse_4 = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_thri_yearly_pulse_4" }
}

on_four_year_pulse = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_four_year_pulse" }
}

on_four_year_pulse_2 = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_four_year_pulse_2" }
}

on_four_year_pulse_3 = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_four_year_pulse_3" }
}

on_four_year_pulse_4 = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_four_year_pulse_4" }
}

on_five_year_pulse = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_five_year_pulse" }

    random_events = {
        100 = wow_ruler.1 # Disease
        500 = wow_ruler.2 # Normal Lifespan
        500 = wow_ruler.3 # Long Lifespan
        10000 = 0
    }
}

# Random
# random_civilized
# random_savage
# random_lesser
# random_bug
# random_otherworld
on_five_year_pulse_2 = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_five_year_pulse_2" }

    random_events = {
        100 = random_savage.1
        1000 = 0
    }
}

on_five_year_pulse_3 = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_five_year_pulse_3" }
}

on_five_year_pulse_4 = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_five_year_pulse_4" }
}

# El Dorado
on_explore_coast = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_explore_coast" }
}

on_conquistador_empty = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_conquistador_empty" }
}

on_conquistador_native = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_conquistador_native" }
}

on_buy_religious_reform = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_buy_religious_reform" }
}

on_circumnavigation = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_circumnavigation" }
}

on_become_free_city = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_become_free_city" }
}

on_remove_free_city = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_remove_free_city" }
}

on_revoke_estate_land_ai = { #AI can't handle the rebels atm or perform a gradual revoke, sorry
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_revoke_estate_land_ai" }
}

on_revoke_estate_land = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_revoke_estate_land" }
}

on_grant_estate_land = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_grant_estate_land" }
}

on_death_has_harem = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_death_has_harem" }
}

on_select_heir_from_harem = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_select_heir_from_harem" }
}

on_fetishist_cult_change = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_fetishist_cult_change" }
}

# country
on_gain_great_power_status = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_gain_great_power_status" }

    if = {
        limit = {
            NOT = { has_country_flag = became_great_power_flag }
        }
        set_country_flag = became_great_power_flag
    }
}

# country
on_lose_great_power_status = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_lose_great_power_status" }
}

# province
on_province_religion_converted = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_province_religion_converted" }
}

# province
on_province_culture_converted = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_province_culture_converted" }
}

# province
# FROM = old owner
on_province_owner_change = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - owner : [Owner.GetName] - old owner : [From.GetName] - on_province_owner_change" }
}

# country
on_parliament_debate_failed = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_parliament_debate_failed" }
}

# country
on_parliament_debate_succeeded = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_parliament_debate_succeeded" }
}

#on_harmonized_<religion>
# country
on_russian_subednik = {

}

# country
on_russian_oprichnina = {

}

# country
on_russian_streltsy = {

}

# province
on_consecrate_patriarch = {
}


# country. from = overlord
on_accept_tribute = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_accept_tribute" }
}

# country. from = overlord
on_refuse_tribute = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_refuse_tribute" }
}
